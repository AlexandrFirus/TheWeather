<Window x:Class="TheWeather.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:TheWeather.ViewModels"
        xmlns:theweather="clr-namespace:TheWeather"
        xmlns:converters="clr-namespace:TheWeather.Helpers"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        mc:Ignorable="d"
        WindowStyle="None"
        ResizeMode="NoResize"
        MouseDown="Window_MouseDown"
        AllowsTransparency="True"
        Background="Transparent"
        SizeToContent="WidthAndHeight"
        Title="TheWeather">   
    <Window.Resources>
        <converters:StringEmptyToVisibilityConverter x:Key="StringEmptyToVisibilityConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:NullToBoolConverter x:Key="NullToBoolConverter"/>
    </Window.Resources>
    <Grid x:Name="mainGrid">
        <Border Background="#8cbdb9" CornerRadius="5" Opacity="0.9"/>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,10">
                <ToggleButton IsChecked="{Binding SearchToggle}" Content="🔍" Background="Transparent"/>
                <Grid Background="#e09e50" Visibility="{Binding Path=SearchToggle, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Opacity=".5" Text=" search ..." Visibility="{Binding SearchData, Converter={StaticResource StringEmptyToVisibilityConverter}}"/>
                    <TextBox Text="{Binding SearchData, UpdateSourceTrigger=PropertyChanged}"   Background="Transparent"/>
                    <Popup IsOpen="{Binding FoundedCities, Converter={StaticResource NullToBoolConverter}}" StaysOpen="False" PopupAnimation="Fade">
                        <ListBox ItemsSource="{Binding FoundedCities}" 
                             SelectedItem="{Binding SelectedCity}"
                             Background="#e09e50">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                        <TextBlock>
                                        <Run Text="{Binding name}"/>
                                        <Run Text=" "/>
                                        </TextBlock>
                                        <Image Width="16" Height="12"
                                               Source="{Binding sys.country, IsAsync=True, Converter={StaticResource FlagCodeToPictureConverter}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Popup>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Visibility="{Binding SelectedCity, Converter={StaticResource NullToVisibilityConverter}}">
                <theweather:CityInfo 
                DataContext="{Binding SelectedCity}"/>
            </Grid>           
            <Label FontSize="10" Content="{Binding LastUpdate}" HorizontalAlignment="Center" Grid.Row="3" />
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="refresh" Command="{Binding RefreshCommand}" IsEnabled="{Binding SelectedCity, Converter={StaticResource NullToBoolConverter}}"/>
                    <MenuItem Header="exit" Command="{Binding ClosingCommand}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            
        </Grid>
    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
